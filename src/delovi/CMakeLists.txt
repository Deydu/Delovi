find_package(Boost COMPONENTS serialization regex thread system)
#find_package(Qt4 REQUIRED)
find_package(Qt4 4.8 REQUIRED)

include(${QT_USE_FILE})

include_directories(${DELOVI_SOURCE_DIR}/src/delovi_lib)
include_directories(${DELOVI_SOURCE_DIR}/src/common)
if(WIN32)
	include_directories(${Boost_INCLUDE_DIRS})
else(WIN32)
	include_directories(/usr/include/boost)
endif(WIN32)

if(WIN32)
	link_directories(${Boost_LIBRARY_DIRS})
else(WIN32)
	link_directories(/usr/lib/boost)
endif(WIN32)

set(DELOVI_MOC_HDRS LogfileDocument.hpp Mainwindow.hpp SimpleFilterDialog.hpp RegexFilterDialog.hpp)
set(DELOVI_UIS main_window.ui simple_filter_dialog.ui regex_filter_dialog.ui)
file(GLOB DELOVI_SRCS *.cpp *.hpp *.h)

#QT4_AUTOMOC(${DELOVI_SRCS})
QT4_WRAP_CPP(DELOVI_MOC_SRCS ${DELOVI_MOC_HDRS})
QT4_WRAP_UI(DELOVI_UIS_H ${DELOVI_UIS})
#QT4_ADD_RESOURCES(DELOVI_QRC ${DELOVI_RESRCS})

source_group("" FILES ${DELOVI_SRCS})
source_group("UI-Files" FILES ${DELOVI_UIS})
#source_group("Headers" FILES ${DELOVI_HEADERS})
source_group("MOC-Files" FILES ${DELOVI_MOC_SRCS})
source_group("UI-Files" FILES ${DELOVI_UIS_H})

#set(QT_USE_QTNETWORK, true)
#set(QT_USE_QTSQL, true)
#set(QT_USE_QTXML, true)

# Don't forget to include output directory, otherwise the UI file won't be wrapped!
include_directories(${CMAKE_CURRENT_BINARY_DIR})

#add_executable(delovi WIN32 ${DELOVI_MOC_SRCS} ${DELOVI_UIS_H} ${DELOVI_QRC} ${DELOVI_SRCS})
add_executable(delovi WIN32 ${DELOVI_MOC_SRCS} ${DELOVI_UIS_H} ${DELOVI_SRCS})

if(WIN32)
#	set_target_properties(delovi PROPERTIES COMPILE_DEFINITIONS_DEBUG "_CONSOLE")
#	set_target_properties(delovi PROPERTIES COMPILE_DEFINITIONS_RELWITHDEBINFO "_CONSOLE")
	set_target_properties(delovi PROPERTIES LINK_FLAGS_DEBUG "/SUBSYSTEM:CONSOLE")
	set_target_properties(delovi PROPERTIES LINK_FLAGS_RELWITHDEBINFO "/SUBSYSTEM:CONSOLE")
	set_target_properties(delovi PROPERTIES LINK_FLAGS_RELEASE "/SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup")
	set_target_properties(delovi PROPERTIES LINK_FLAGS_MINSIZEREL "/SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup")
endif(WIN32)

target_link_libraries(delovi ${QT_LIBRARIES} ${Boost_LIBRARIES} delovi_lib)

if(WIN32)
	# source: http://stackoverflow.com/questions/6534660/cmake-qt-libraries-binary-equivilent
	foreach(Qt_library ${QT_LIBRARIES})
		get_filename_component(Qt_library_name ${Qt_library} NAME_WE)
		string(REGEX REPLACE "^lib(.*)" "\\1" Qt_library_name ${Qt_library_name})
		set(Qt_shared_library ${QT_BINARY_DIR}/${Qt_library_name}.dll)
		if(EXISTS ${Qt_shared_library})
			message("Qt shared library to be installed:  ${Qt_shared_library}")
			list(APPEND Qt_Install_Libraries ${Qt_shared_library})
		endif(EXISTS ${Qt_shared_library})
	endforeach(Qt_library ${QT_LIBRARIES})
	list(REMOVE_DUPLICATES Qt_Install_Libraries)
	install(FILES ${Qt_Install_Libraries} DESTINATION Delovi)
	# same for Boost libraries
	foreach(Boost_library ${Boost_LIBRARIES})
		get_filename_component(Boost_library_name ${Boost_library} NAME_WE)
		string(REGEX REPLACE "^lib(.*)" "\\1" Boost_library_name ${Boost_library_name})
		set(Boost_shared_library ${Boost_LIBRARY_DIRS}/${Boost_library_name}.dll)
		if(EXISTS ${Boost_shared_library})
			message("Boost shared library to be installed:  ${Boost_shared_library}")
			list(APPEND Boost_Install_Libraries ${Boost_shared_library})
		endif(EXISTS ${Boost_shared_library})
	endforeach(Boost_library ${Boost_LIBRARIES})
	list(REMOVE_DUPLICATES Boost_Install_Libraries)
	install(FILES ${Boost_Install_Libraries} DESTINATION Delovi)
endif(WIN32)
install(TARGETS delovi DESTINATION Delovi)
